#!/bin/sh
#
# mbp-gather - gathers benchmarking and profiling information from a MySQL server
#
# Copyright (C) 2014 by Chris Pappalardo (cpappala@yahoo.com)
#
# Some elements originally published in High Performance MySQL (3rd edition), Schwartz
# Copyright (C) 2012 Baron Schwartz, et al

# script quits on any errors
set -e

# initialize variables
INTERVAL=5
PREFIX=$INTERVAL-sec-status
RUNFILE=mbp-gather-runfile
OUTPUTDIR=$(pwd -P)
DBPASS=""
DBUSER=$USER

# get and process cli args
while getopts "ho:p:u:" arg; do
    case $arg in
	h) echo "\
Usage:  $(basename $0) [-h] [-o dir] [-p dbpass] [-u dbuser]
$(basename $0) gathers benchmarking and profiling information from a MySQL server
Where:
  -h  help (this)
  -o  path where data files will be created (current by default)
  -p  sets db password
  -u  dets db username
"; exit 1;;
	o) OUTPUTDIR=$(echo "$OPTARG" | sed -e 's/\/$//');;
	p) DBPASS="-p$OPTARG";;
	u) DBUSER=$OPTARG;;
	*) echo "use -h for help"; exit 1;;
    esac
done

# get and store mysql config
mysql -u $DBUSER $DBPASS -e 'SHOW GLOBAL VARIABLES' >> $OUTPUTDIR/mysql-variables

# start tcpdump (requires sudo privileges)
tcpdumpstart=$(date +%F_%I)
sudo tcpdump -s 65535 -x -n -q -tttt -i any port 3306 >> $OUTPUTDIR/$tcpdumpstart-tcpdump 2>/dev/null &
tcpdumppid=$!

# main loop
while [ -e $OUTPUTDIR/$RUNFILE ]; do

   # set filename prefix to YYYY-MM-DD_HH
   file=$(date +%F_%I)
   # sleep until next observation period
   sleep=$(date +%s.%N | awk "{print $INTERVAL - (\$1 % $INTERVAL)}")
   sleep $sleep
   # capture timestamp and load
   ts="$(date +"TS %s.%N %F %T")"
   loadavg="$(uptime)"
   # capture MySQL status
   echo "$ts $loadavg" >> $OUTPUTDIR/$PREFIX-$file-status
   mysql -u $DBUSER $DBPASS -e 'SHOW GLOBAL STATUS' >> $OUTPUTDIR/$PREFIX-$file-status &
   # capture MySQL InnoDB status
   echo "$ts $loadavg" >> $OUTPUTDIR/$PREFIX-$file-innodbstatus
   mysql -u $DBUSER $DBPASS -e 'SHOW ENGINE INNODB STATUS\G' >> $OUTPUTDIR/$PREFIX-$file-innodbstatus &
   # capture MySQL process list
   echo "$ts $loadavg" >> $OUTPUTDIR/$PREFIX-$file-processlist
   mysql -u $DBUSER $DBPASS -e 'SHOW FULL PROCESSLIST\G' >> $OUTPUTDIR/$PREFIX-$file-processlist &
   # capture diskstats (note: no load info)
   echo "$ts" >> $OUTPUTDIR/$PREFIX-$file-diskstats
   cat /proc/diskstats >> $OUTPUTDIR/$PREFIX-$file-diskstats &
   # capture lsof (open file information; note: TS at *END*)
   lsof >> $OUTPUTDIR/$PREFIX-$file-lsof
   echo "$ts $loadavg" >> $OUTPUTDIR/$PREFIX-$file-lsof
   # echo timestamp to console before looping
   echo $ts

done

# end tcpdump (again, requires sudo privileges)
sudo kill $tcpdumppid

# exit and print that runfile does not(no longer) exist(s)
echo "Exiting because $OUTPUTDIR/$RUNFILE does not exist."
